#! /usr/bin/env python

# Monocular Pose Estimator dynamic parameter configuration file

PACKAGE='monocular_pose_estimator'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("threshold_value", int_t, 0, "The thresholding value for the images", 180, 0, 255)
gen.add("blur_size", int_t, 0, "The standard deviation of the Gaussian blurring filter", 2, 0, 10)
gen.add("min_blob_area", double_t, 0, "Smallest blob area found", 10, 0, 100)
gen.add("max_blob_area", double_t, 0, "Largest blob area found", 200, 0, 1000)

# Currently not used
gen.add("max_width_height_distortion", double_t, 0, "Max height width distortion of blob", 0.5, 0, 1)
gen.add("max_circular_distortion", double_t, 0, "Max deviation from roundness", 0.5, 0, 1)

gen.add("back_projection_pixel_tolerance", double_t, 0, "The pixel tolerance for the backprojection of points", 5, 0, 10)
gen.add("nearest_neighbour_pixel_tolerance", double_t, 0, "The pixel tolerance for finding point correspondences", 5, 0, 10)
gen.add("certainty_threshold", double_t, 0, "The proportion of back projected points that are correct for a set of image marker correspondences to be considered valid", 0.75, 0, 1)
gen.add("valid_correspondence_threshold", double_t, 0, "The proportion of correspondences that have to be correct based on the back projection of points for the entire correspondence list to be considered correct", 0.7, 0, 1)
gen.add("roi_border_thickness", int_t, 0, "The thickness of the boarder around the region of interest in pixels", 10, 0, 200)

# node_.param("contrast", contrast_, -1); //0-255, -1 "leave alone"
# node_.param("saturation", saturation_, -1); //0-255, -1 "leave alone"
# node_.param("sharpness", sharpness_, -1); //0-255, -1 "leave alone"
# // enable/disable autofocus
# node_.param("autofocus", autofocus_, false);
# node_.param("focus", focus_, -1); //0-255, -1 "leave alone"
# // enable/disable autoexposure
# node_.param("autoexposure", autoexposure_, true);
# node_.param("exposure", exposure_, 100);
# node_.param("gain", gain_, -1); //0-100?, -1 "leave alone"


gen.add("camera_brightness", int_t, 0, "Brightness", -1, -1, 255)
gen.add("camera_contrast", int_t, 0, "Brightness", -1, -1, 255)
gen.add("camera_saturation", int_t, 0, "Saturation", -1, -1, 255)
gen.add("camera_sharpness", int_t, 0, "Sharpness", -1, -1, 255)
gen.add("camera_autofocus", bool_t, 0, "Autofocus", True)
gen.add("camera_focus", int_t, 0, "Focus", -1, -1, 20)
gen.add("camera_autoexposure", bool_t, 0, "Auto Exposure", True)
gen.add("camera_exposure", int_t, 0, "Exposure", -1, -1, 100)
gen.add("camera_gain", int_t, 0, "Gain", -1, -1, 100)

exit(gen.generate(PACKAGE, "monocular_pose_estimator", "MonocularPoseEstimator"))
